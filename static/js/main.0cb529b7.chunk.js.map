{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABET","SORT_BY_LENGTH","App","useState","sortedBy","setSortedBy","reverse","setReverse","visibleGoods","goods","sort","a","b","localeCompare","length","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAgB,WAChBC,EAAiB,SAyBVC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA1Be,SAACC,EAAD,GAA+B,IAArBC,EAAoB,EAApBA,KAAMJ,EAAc,EAAdA,QAgBrC,OAfII,GACFD,EAAMC,MAAK,SAACC,EAAGC,GACb,OAAQF,GACN,KAAKV,EACH,OAAOW,EAAEE,cAAcD,GAEzB,KAAKX,EACH,OAAOU,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXR,EACKG,EAAMH,UAGRG,EAMcM,CAAe,GAAD,OAC7BhB,GAAkB,CAAEW,KAAMN,EAAUE,YAQ1C,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAX,0BAAsCd,IAAaJ,IAChEmB,QAAS,kBAAMd,EAAYL,IAH7B,iCAQA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAX,0BAAyCd,IAAaH,IACnEkB,QAAS,kBAAMd,EAAYJ,IAH7B,4BAQA,wBACEgB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAX,2BAA0CZ,IACvDa,QAAS,kBAAMZ,GAAYD,IAH7B,sBAQEF,GAAYE,IACZ,wBACEW,KAAK,SACLD,UAAU,4BACVG,QApCW,WACnBd,EAAY,IACZE,GAAW,IA+BL,sBAUJ,6BACGC,EAAaY,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7FlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0cb529b7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames/bind';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nconst getSortedGoods = (goods, { sort, reverse }) => {\n  if (sort) {\n    goods.sort((a, b) => {\n      switch (sort) {\n        case SORT_ALPHABET:\n          return a.localeCompare(b);\n\n        case SORT_BY_LENGTH:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return goods.reverse();\n  }\n\n  return goods;\n};\n\nexport const App = () => {\n  const [sortedBy, setSortedBy] = useState('');\n  const [reverse, setReverse] = useState(false);\n  const visibleGoods = getSortedGoods(\n    [...goodsFromServer], { sort: sortedBy, reverse },\n  );\n\n  const handlerReset = () => {\n    setSortedBy('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', { [`is-light`]: sortedBy !== SORT_ALPHABET })}\n          onClick={() => setSortedBy(SORT_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', { [`is-light`]: sortedBy !== SORT_BY_LENGTH })}\n          onClick={() => setSortedBy(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { [`is-light`]: !reverse })}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortedBy || reverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handlerReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}